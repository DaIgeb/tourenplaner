{
  "swagger": "2.0",
  "info": {
    "version": "0.0.1",
    "title": "Swagger Petstore",
    "description": "API to use for tourenplaning",
    "termsOfService": "http://helloreverb.com/terms/",
    "contact": {
      "name": "Daniel Roth"
    },
    "license": {
      "name": "MIT"
    }
  },
  "basePath": "/v1",
  "tags": [
    {
      "name": "seasons",
      "description": "Everything about your Pets",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "store",
      "description": "Access to Petstore orders"
    },
    {
      "name": "user",
      "description": "Operations about user",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/seasons": {
      "get": {
        "tags":["seasons"],
        "description": "Returns all seasons from the system that the user has access to",
        "operationId": "findSeasons",
        "parameters": [
          {
            "name": "years",
            "in": "query",
            "description": "years to filter by",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of results to return",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "season response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Season"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags":["seasons"],
        "description": "Creates a new seasons in the store.  Duplicates are not allowed",
        "operationId": "addSeason",
        "parameters": [
          {
            "name": "season",
            "in": "body",
            "description": "Season to add to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Season"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "season response",
            "schema": {
              "$ref": "#/definitions/Pet"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },

    "/seasons/{year}": {
      "get": {
        "tags":["seasons"],
        "description": "Returns a user based on a single ID, if the user does not have access to the pet",
        "operationId": "findSeasonById",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "Year of the season to fetch",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Season response",
            "schema": {
              "$ref": "#/definitions/Season"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/seasons/{year}/{version}": {
      "get": {
        "tags":["seasons"],
        "description": "Returns a user based on a single ID, if the user does not have access to the pet",
        "operationId": "findSeasonById",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "Year of the season to fetch",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "version",
            "in": "path",
            "description": "Version of the season to fetch",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Season response",
            "schema": {
              "$ref": "#/definitions/Season"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "githubAccessCode": {
      "x-authorize": "fixtures/security/auth_default.js",
      "type": "oauth2",
      "scopes": {
        "user": "Grants read/write access to profile info only. Note that this scope includes user:email and user:follow.",
        "user:email": "Grants read access to a user’s email addresses.",
        "user:follow": "Grants access to follow or unfollow other users."
      },
      "flow": "accessCode",
      "authorizationUrl": "https://github.com/login/oauth/authorize",
      "tokenUrl": "https://github.com/login/oauth/access_token"
    }
  },
  "definitions": {
    "Season": {
      "type": "object",
      "required": [
        "year",
        "version"
      ],
      "properties": {
        "year": {
          "type": "integer",
          "format": "int64"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}